// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class D3Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "Chrome/chromedriver-win32.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tESTLINKS() {
    // Test name: TEST-LINKS
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | storeAttribute | linkText=Reset@href | reset_href
    {
      WebElement element = driver.findElement(By.linkText("Reset"));
      String attribute = element.getAttribute("href");
      vars.put("reset_href", attribute);
    }
    // 4 | assert | reset_href | /reset
    assertEquals(vars.get("reset_href").toString(), "https://cs1632.appspot.com/reset");
  }
  @Test
  public void tESTCATALOG() {
    // Test name: TEST-CATALOG
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Catalog |
    driver.findElement(By.linkText("Catalog")).click();
    // 4 | storeAttribute | xpath=//li[2]/img@src | srcImg
    {
      WebElement element = driver.findElement(By.xpath("//li[2]/img"));
      String attribute = element.getAttribute("src");
      vars.put("srcImg", attribute);
    }
    // 5 | assert | srcImg | /images/cat2.jpg
    assertEquals(vars.get("srcImg").toString(), "https://cs1632.appspot.com/images/cat2.jpg");
  }
  @Test
  public void tESTFEEDACAT() {
    // Test name: TEST-FEED-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Feed-A-Cat |
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 4 | assertElementPresent | css=.btn |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".btn"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tESTFEED() {
    // Test name: TEST-FEED
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Feed-A-Cat |
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 4 | click | id=catnips |
    driver.findElement(By.id("catnips")).click();
    // 5 | type | id=catnips | 6
    driver.findElement(By.id("catnips")).sendKeys("6");
    // 6 | click | css=.btn |
    driver.findElement(By.cssSelector(".btn")).click();
    // 7 | assertText | id=feedResult | Nom, nom, nom.
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Nom, nom, nom."));
  }
  @Test
  public void tESTLISTING() {
    // Test name: TEST-LISTING
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | assertElementPresent | css=.list-group-item:nth-child(1) |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(1)"));
      assert(elements.size() > 0);
    }
    // 4 | assertElementPresent | css=.list-group-item:nth-child(2) |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(2)"));
      assert(elements.size() > 0);
    }
    // 5 | assertElementPresent | css=.list-group-item:nth-child(3) |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(3)"));
      assert(elements.size() > 0);
    }
    // 6 | assertElementNotPresent | css=.list-group-item:nth-child(4) |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".list-group-item:nth-child(4)"));
      assert(elements.size() == 0);
    }
    // 7 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void tESTRENT() {
    // Test name: TEST-RENT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Rent-A-Cat |
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | click | id=rentID |
    driver.findElement(By.id("rentID")).click();
    // 5 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 6 | click | css=.form-group:nth-child(3) .btn |
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 7 | assertText | css=.list-group-item:nth-child(2) | Rented out
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("Rented out"));
    // 8 | assertText | id=rentResult | Success!
    assertThat(driver.findElement(By.id("rentResult")).getText(), is("Success!"));
  }
  @Test
  public void tESTRENTACAT() {
    // Test name: TEST-RENT-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Rent-A-Cat |
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | assertElementPresent | xpath=//button[@onclick='rentSubmit()'] |
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[@onclick=\'rentSubmit()\']"));
      assert(elements.size() > 0);
    }
    // 5 | assertElementPresent | xpath=//button[@onclick='returnSubmit()'] |
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[@onclick=\'returnSubmit()\']"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tESTRETURN() {
    // Test name: TEST-RETURN
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Rent-A-Cat |
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 3 | click | id=rentID |
    driver.findElement(By.id("rentID")).click();
    // 4 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 5 | click | css=.form-group:nth-child(3) .btn |
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 6 | click | id=returnID |
    driver.findElement(By.id("returnID")).click();
    // 7 | type | id=returnID | 2
    driver.findElement(By.id("returnID")).sendKeys("2");
    // 8 | click | css=.form-group:nth-child(4) .btn |
    driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
    // 9 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 10 | assertText | id=returnResult | Success!
    assertThat(driver.findElement(By.id("returnResult")).getText(), is("Success!"));
  }
  @Test
  public void tESTRESET() {
    // Test name: TEST-RESET
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Rent-A-Cat |
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 3 | click | id=rentID |
    driver.findElement(By.id("rentID")).click();
    // 4 | type | id=rentID | 2
    driver.findElement(By.id("rentID")).sendKeys("2");
    // 5 | click | css=.form-group:nth-child(3) .btn |
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 6 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 7 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 8 | assertText | css=.list-group-item:nth-child(1) | ID 1. Jennyanydots
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(1)")).getText(), is("ID 1. Jennyanydots"));
    // 9 | assertText | css=.list-group-item:nth-child(2) | ID 2. Old Deuteronomy
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(2)")).getText(), is("ID 2. Old Deuteronomy"));
    // 10 | assertText | css=.list-group-item:nth-child(3) | ID 3. Mistoffelees
    assertThat(driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("ID 3. Mistoffelees"));
  }
  @Test
  public void dEFECTFUNFEEDNEGATIVE() {
    // Test name: DEFECT-FUN-FEED-NEGATIVE
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Feed-A-Cat |
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    // 4 | click | id=catnips |
    driver.findElement(By.id("catnips")).click();
    // 5 | type | id=catnips | -3
    driver.findElement(By.id("catnips")).sendKeys("-3");
    // 6 | click | css=.btn |
    driver.findElement(By.cssSelector(".btn")).click();
    // 7 | assertText | id=feedResult | Cat fight!
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Cat fight!"));
  }
  @Test
  public void dEFECTFUNGREETCAT() {
    // Test name: DEFECT-FUN-GREET-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Rent-A-Cat |
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    // 4 | click | id=rentID |
    driver.findElement(By.id("rentID")).click();
    // 5 | type | id=rentID | 1
    driver.findElement(By.id("rentID")).sendKeys("1");
    // 6 | click | css=.form-group:nth-child(3) .btn |
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    // 7 | click | linkText=Greet-A-Cat |
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 8 | assertText | css=#greeting > h4 | Meow!Meow!
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!"));
  }
  @Test
  public void tESTGREETACAT() {
    // Test name: TEST-GREET-A-CAT
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Greet-A-Cat |
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 4 | assertText | css=#greeting > h4 | Meow!Meow!Meow!
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!Meow!"));
  }
  @Test
  public void tESTGREETACATWITHNAME() {
    // Test name: TEST-GREET-A-CAT-WITH-NAME
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | open | https://cs1632.appspot.com/greet-a-cat/Jennyanydots |
    driver.get("https://cs1632.appspot.com/greet-a-cat/Jennyanydots");
    // 4 | assertText | css=#greeting > h4 | Meow! from Jennyanydots.
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow! from Jennyanydots."));
  }
  @Test
  public void dEFECTFUNGREETCATNAME() {
    // Test name: DEFECT-FUN-GREET-CAT-NAME
    // Step # | name | target | value
    // 1 | open | https://cs1632.appspot.com/ |
    driver.get("https://cs1632.appspot.com/");
    // 2 | click | linkText=Reset |
    driver.findElement(By.linkText("Reset")).click();
    // 3 | click | linkText=Greet-A-Cat |
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    // 4 | open | https://cs1632.appspot.com/greet-a-cat/s%//:// |
    driver.get("https://cs1632.appspot.com/greet-a-cat/s%//:/");
    // 5 | assertText | css=html | s%//:// is not here
    assertThat(driver.findElement(By.cssSelector("html")).getText(), is("s%//:// is not here"));
  }
}
